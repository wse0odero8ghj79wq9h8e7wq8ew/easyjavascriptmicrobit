<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="n%A$qK19(/jJH%VBW%@X">canaddhealthvar</variable><variable id=";4@sh,98U+[iq|@^]x1Q">poses</variable></variables><block type="pxt-on-start" x="10" y="10"><statement name="HANDLER"><block type="variables_set"><field name="VAR" id="n%A$qK19(/jJH%VBW%@X">canaddhealthvar</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean"><field name="BOOL">TRUE</field></block></value><next><block type="variables_set"><field name="VAR" id=";4@sh,98U+[iq|@^]x1Q">poses</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" inline="false"><mutation items="25" horizontalafter="3"></mutation><value name="ADD0"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><value name="ADD1"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><value name="ADD2"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><value name="ADD3"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">3</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><value name="ADD4"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">0</field></shadow></value></block></value><value name="ADD5"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block></value><value name="ADD6"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block></value><value name="ADD7"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block></value><value name="ADD8"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">3</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block></value><value name="ADD9"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">1</field></shadow></value></block></value><value name="ADD10"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></value><value name="ADD11"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></value><value name="ADD12"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></value><value name="ADD13"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">3</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></value><value name="ADD14"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">2</field></shadow></value></block></value><value name="ADD15"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">3</field></shadow></value></block></value><value name="ADD16"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">3</field></shadow></value></block></value><value name="ADD17"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">3</field></shadow></value></block></value><value name="ADD18"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">3</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">3</field></shadow></value></block></value><value name="ADD19"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">3</field></shadow></value></block></value><value name="ADD20"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">4</field></shadow></value></block></value><value name="ADD21"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">4</field></shadow></value></block></value><value name="ADD22"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">4</field></shadow></value></block></value><value name="ADD23"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">3</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">4</field></shadow></value></block></value><value name="ADD24"><block type="lists_create_with"><mutation items="2" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number"><field name="NUM">4</field></shadow></value></block></value></block></value><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace extras {" line1="    /**" line2="     * Lights a random tile." line3="     */" line4="    //% blockId=&quot;specialrandomtile&quot;" line5="    //% block=&quot;light random tile&quot;" line6="    export function randomtile(): void {" line7="        let randx = randint(0, 4)" line8="        let randy = randint(0, 4)" line9="        led.plot(randx, randy)" line10="    }" line11="    /**" line12="     * Lights a random tile with random transparency." line13="     */" line14="    //% blockId=&quot;specialrandomtiletransparency&quot;" line15="    //% block=&quot;light random transparency tile&quot;" line16="    export function randomtiletransparency(): void {" line17="        let randx2 = randint(0, 4)" line18="        let randy2 = randint(0, 4)" line19="        let randbright = randint(0, 255)" line20="        led.plotBrightness(randx2, randy2, randbright)" line21="    }" line22="    /**" line23="     * Prints a factorial." line24="     */" line25="    //% blockId=&quot;specialfactorial&quot;" line26="    //% block=&quot;factorial $num&quot;" line27="    export function factorial(num: number) {" line28="        let multiply = num" line29="        let answer = 0" line30="        if (num &lt;= -1) {" line31="            return 0;" line32="        }" line33="        if (num == 0 || num == 1) {" line34="            return 1;" line35="        }" line36="        answer = num" line37="        while (multiply &gt;= 3) {" line38="            multiply = multiply - 1" line39="            answer = answer * multiply" line40="        }" line41="        return answer;" line42="    }" line43="    /**" line44="     * Finds coords of a led in a table using a number instead of position." line45="     */" line46="    //% blockId=&quot;specialfindledbynumber&quot;" line47="    //% block=&quot;find led by number $numm&quot;" line48="    //% numm.min=1 numm.max=25" line49="    export function findledbynumber(numm: number) {" line50="        if (numm &lt;= 0 || numm &gt;= 26) {" line51="            return [0, 0];" line52="        }" line53="        let coords = poses[numm - 1]" line54="        return coords;" line55="    }" line56="    /**" line57="     * Finds x coord of a led using a number instead of position." line58="     */" line59="    //% blockId=&quot;specialfindledxbynumber&quot;" line60="    //% block=&quot;find led x by number $numm&quot;" line61="    //% numm.min=1 numm.max=25" line62="    export function findledxbynumber(numm: number) {" line63="        if (numm &lt;= 0 || numm &gt;= 26) {" line64="            return 0;" line65="        }" line66="        let coords2 = poses[numm - 1]" line67="        return coords2[0];" line68="    }" line69="    /**" line70="     * Finds y coord of a led using a number instead of position." line71="     */" line72="    //% blockId=&quot;specialfindledybynumber&quot;" line73="    //% block=&quot;find led y by number $numm&quot;" line74="    //% numm.min=1 numm.max=25" line75="    export function findledybynumber(numm: number) {" line76="        if (numm &lt;= 0 || numm &gt;= 26) {" line77="            return 0;" line78="        }" line79="        let coords3 = poses[numm - 1]" line80="        return coords3[1];" line81="    }" line82="    /**" line83="     * Plots an led using number instead of position." line84="     */" line85="    //% blockId=&quot;specialplotledbynumber&quot;" line86="    //% block=&quot;plot led by number $numm&quot;" line87="    //% numm.min=1 numm.max=25" line88="    export function plotledbynumber(numm: number) {" line89="        if (numm &lt;= 0 || numm &gt;= 26) {" line90="            return;" line91="        }" line92="        let coords4 = poses[numm - 1]" line93="        led.plot(coords4[0],coords4[1])" line94="    }" line95="    /**" line96="     * Finds state of led, on or off by number." line97="     */" line98="    //% blockId=&quot;specialpointledbynumber&quot;" line99="    //% block=&quot;point led by number $numm&quot;" line100="    //% numm.min=1 numm.max=25" line101="    export function pointledbynumber(numm: number) {" line102="        if (numm &lt;= 0 || numm &gt;= 26) {" line103="            return false;" line104="        }" line105="        let coords5 = poses[numm - 1]" line106="        return led.point(coords5[0],coords5[1]);" line107="    }" line108="    /**" line109="     * If led is on then" line110="     */" line111="    //% blockId=&quot;specialifledison&quot;" line112="    //% block=&quot;if led $numm is on&quot;" line113="    //% numm.min=1 numm.max=25" line114="    export function ifledison(numm: number,cb: (onoff : boolean) =&gt; void): void {" line115="        if (numm &lt;= 0 || numm &gt;= 26) {" line116="            return;" line117="        }" line118="        let coords52 = poses[numm - 1]" line119="        let onoroff = led.point(coords52[0],coords52[1])" line120="        return cb(onoroff);" line121="    }" line122="}" numlines="123"></mutation><next><block type="typescript_statement" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace easyScript {" line1="    /**" line2="     * Prints whatever is inside of it on the microbit." line3="     */" line4="    //% blockId=easyprint" line5="    //% block=&quot;print $str&quot;" line6="    export function print(str : string): void {" line7="        basic.showString(str)" line8="    }" line9="    /**" line10="     * Waits for an amount of time in seconds." line11="     */" line12="    //% blockId=easywait" line13="    //% block=&quot;wait $time&quot;" line14="    export function wait(time : number): void {" line15="        basic.pause(time*1000)" line16="    }" line17="    /**" line18="     * Clears the screen." line19="     */" line20="    //% blockId=easyclear" line21="    //% block=&quot;clear&quot;" line22="    export function clear(): void {" line23="        basic.clearScreen()" line24="    }" line25="}" numlines="26"></mutation></block></next></block></next></block></next></block></statement></block></xml>